{
  "workflow": {
    "unique_name": "definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D",
    "name": "XDR-5929-Python Adapter Large String Support on Arguments",
    "title": "XDR-5929-Python Adapter Large String Support on Arguments",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "EmailTable",
          "type": "datatype.string",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02GHFPFNK2XCT3mzIWykgx4VHE5gCGyVPGz",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.large_string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "LS Variable1",
          "type": "datatype.large_string",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02GC16JNQ9C4715PPjgPK50QfNcZdVHyYoA",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "{\"users\": [{\"name\": \"Alice\"}, {\"name\": \"Bob\"}, {\"name\": \"Charlie\"}]}",
          "scope": "local",
          "name": "String Variable",
          "type": "datatype.string",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02GC188EZHMW94Meu47fl5rEWkAldmiLi52",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.large_string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "LS variable2",
          "type": "datatype.large_string",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02GGSFQRLVZRH2yBoIg1CzXrpfMeOuH1P1F",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.large_string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "LS variable3",
          "type": "datatype.large_string",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02GGSFUV6431L5NgrvBfW5aiegFuOaO9kvt",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "Fail",
          "scope": "output",
          "name": "Group1 TestCases",
          "type": "datatype.string",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02GC2332X4KTP5gm0fVXx4zXwDXvSybegEF",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "Fail",
          "scope": "output",
          "name": "Group2TestCases",
          "type": "datatype.string",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02GC205RL4XXY5517rEFbu1gJ0wMFQ1LReu",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "Fail",
          "scope": "output",
          "name": "Overall Status for 5929",
          "type": "datatype.string",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02GC2AROZDCLS4x3p0xbl1TGkpDjgB70dxk",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "delete_workflow_instance": false,
      "display_name": "XDR-5929-Python Adapter Large String Support on Arguments",
      "runtime_user": {
        "target_default": true
      },
      "target": {
        "no_target": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_02GC15FJYS9CJ6WNUfK3ixMLaY2Du47NVk7",
        "name": "SXO- Create Token-Generate Token",
        "title": "SXO- Create Token-Generate Token",
        "type": "workflow.sub_workflow",
        "base_type": "subworkflow",
        "properties": {
          "continue_on_failure": false,
          "display_name": "SXO- Create Token-Generate Token",
          "input": {
            "variable_workflow_02BC75FY6KJQ31bp06fvoXJ188gYh1wbUa7": "client-0f28744e-216c-4f0b-bd54-48927c18edb9",
            "variable_workflow_02BC8GA3DL7UT2XvjCn2jMUeOtCfsmMDZy4": "iDqb-O-ftY7N-v5VEN7ttCEyuOfIJMdxwPbWRuszfwBf0QS5I8Gp4Q"
          },
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "override_workflow_target": true,
            "target_id": "definition_target_02GHIF7SYJ3XE2PY2aOQMso19qnNYqg5dt9",
            "target_type": "web-service.endpoint"
          },
          "workflow_id": "definition_workflow_02BC75FXY8V6Q7fCnqF2hIiteIL3tPcTIMX",
          "workflow_name": "SXO- Create Token-Generate Token"
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02GC1G1GRC7UZ49u7Ub47hh7rBZMyl97Seo",
        "name": "Group",
        "title": "Fetch Atomics WF and Process from Python",
        "type": "logic.group",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Fetch Atomics WF and Process from Python",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02GC14ILM9FZ86WdRRoLwhp9YJiAUWFi1vn",
            "name": "Execute Python Script",
            "title": "Fetch HTTP Response from WFs API",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": true,
              "display_name": "Fetch HTTP Response from WFs API",
              "script": "import requests\nimport json\n\nurl = \"https://automate.int.iroh.site/api/v1.1/workflows?is_atomic=true\u0026start=0\u0026limit=8000\u0026sort_by=updated_on\"\n\npayload = json.dumps({\n  \"categories\": [],\n  \"owner\": []\n})\nheaders = {\n  'authority': 'automate.int.iroh.site',\n  'accept': 'application/json, text/plain, */*',\n  'accept-language': 'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7',\n  'authorization': 'Bearer $activity.definition_activity_02GC15FJYS9CJ6WNUfK3ixMLaY2Du47NVk7.output.variable_workflow_02BC75FY6K85Y7UxbMgUx2RiWsymGSVCmQm$',\n  'cache-control': 'no-cache',\n  'content-type': 'application/json',\n  'origin': 'https://xdr.int.iroh.site',\n  'pragma': 'no-cache',\n  'sec-ch-ua': '\"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"',\n  'sec-ch-ua-mobile': '?0',\n  'sec-ch-ua-platform': '\"macOS\"',\n  'sec-fetch-dest': 'empty',\n  'sec-fetch-mode': 'cors',\n  'sec-fetch-site': 'same-site',\n  'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36',\n  'x-csco-trxid': '75c2f07d'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\n\nprint(response.text)",
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02GHTI7PJXTNN2neq5onb5ZAfQFE8CNOUB4",
            "name": "Execute Python Script",
            "title": "Fetch HTTP Response From targets Api",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": true,
              "display_name": "Fetch HTTP Response From targets Api",
              "script": "import requests\nimport json\n\nurl = \"https://automate.int.iroh.site/api/v1/targets\"\n\npayload = json.dumps({\n  \"categories\": [],\n  \"owner\": []\n})\nheaders = {\n  'authority': 'automate.int.iroh.site',\n  'accept': 'application/json, text/plain, */*',\n  'accept-language': 'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7',\n  'authorization': 'Bearer $activity.definition_activity_02GC15FJYS9CJ6WNUfK3ixMLaY2Du47NVk7.output.variable_workflow_02BC75FY6K85Y7UxbMgUx2RiWsymGSVCmQm$',\n  'cache-control': 'no-cache',\n  'content-type': 'application/json',\n  'origin': 'https://xdr.int.iroh.site',\n  'pragma': 'no-cache',\n  'sec-ch-ua': '\"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"',\n  'sec-ch-ua-mobile': '?0',\n  'sec-ch-ua-platform': '\"macOS\"',\n  'sec-fetch-dest': 'empty',\n  'sec-fetch-mode': 'cors',\n  'sec-fetch-site': 'same-site',\n  'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36',\n  'x-csco-trxid': '75c2f07d'\n}\n\nresponse = requests.request(\"GET\", url, headers=headers, data=payload)\n\nprint(response.text)",
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02GC16NI9ID7K5h0ULWYg4zJeg55DZ7lZ22",
            "name": "Set Variables",
            "title": "Strore WF Response in LS1 and targets Response LS2",
            "type": "core.set_multiple_variables",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": true,
              "display_name": "Strore WF Response in LS1 and targets Response LS2",
              "skip_execution": false,
              "variables_to_update": [
                {
                  "variable_to_update": "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.local.variable_workflow_02GC16JNQ9C4715PPjgPK50QfNcZdVHyYoA$",
                  "variable_value_new": "$activity.definition_activity_02GC14ILM9FZ86WdRRoLwhp9YJiAUWFi1vn.output.response_body$"
                },
                {
                  "variable_to_update": "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.local.variable_workflow_02GGSFQRLVZRH2yBoIg1CzXrpfMeOuH1P1F$",
                  "variable_value_new": "$activity.definition_activity_02GHTI7PJXTNN2neq5onb5ZAfQFE8CNOUB4.output.response_body$"
                }
              ]
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02GC174VC447W7DUIV7LI6VnuVcBV5D77k5",
            "name": "Execute Python Script",
            "title": "Fetch name and ID from LS1 as Arguments",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": false,
              "display_name": "Fetch name and ID from LS1 as Arguments",
              "script": "import json\nimport sys \ndata = json.loads(sys.argv[1])\njson_data = json.loads(sys.argv[2])\njson_data1 = json.loads(sys.argv[3])\n\nuser_names = [user['name'] for user in data['users']]\nprint(user_names)\n\n# Iterate over the list of results in json_data and extract name and id\nfor item in json_data['results']:\n    name = item['name']\n    _id = item['id']\n    print(\"Name:\", name)\n    print(\"ID:\", _id)\n    print()\n\n# Iterate over the list of results in json_data and extract name and id\nfor entry in json_data1:\n    print(f\"Target_Name -- {entry['name']}. Target_ID -- {entry['id']}.\")",
              "script_arguments": [
                "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.local.variable_workflow_02GC188EZHMW94Meu47fl5rEWkAldmiLi52$",
                "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.local.variable_workflow_02GC16JNQ9C4715PPjgPK50QfNcZdVHyYoA$",
                "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.local.variable_workflow_02GGSFQRLVZRH2yBoIg1CzXrpfMeOuH1P1F$"
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02GC18ZIOQ87R0ubTkHIECJFYI7jOpqZwWh",
            "name": "Execute Python Script",
            "title": "Convert Json to XML from LS1 Arguments",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": true,
              "display_name": "Convert Json to XML from LS1 Arguments",
              "script": "import json\nimport sys\nimport xml.etree.ElementTree as ET\n\ndef json_to_xml(json_data):\n    root = ET.Element(\"root\")\n    json_to_xml_recursive(json_data, root)\n    return ET.tostring(root, encoding=\"unicode\")\n\ndef json_to_xml_recursive(json_data, parent):\n    if isinstance(json_data, dict):\n        for key, value in json_data.items():\n            element = ET.Element(key)\n            parent.append(element)\n            json_to_xml_recursive(value, element)\n    elif isinstance(json_data, list):\n        for item in json_data:\n            element = ET.Element(\"item\")\n            parent.append(element)\n            json_to_xml_recursive(item, element)\n    else:\n        parent.text = str(json_data)\n\n# Example JSON data\njson_data = json.loads(sys.argv[1])\n# Convert JSON to XML\nxml_data = json_to_xml(json_data)\nprint(xml_data)",
              "script_arguments": [
                "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.local.variable_workflow_02GC16JNQ9C4715PPjgPK50QfNcZdVHyYoA$"
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02GC19WK1K5S54thuyYT51FN4hZ015cUC4J",
            "name": "Set Variables",
            "title": "Store XML Data to Variable LS2",
            "type": "core.set_multiple_variables",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": true,
              "display_name": "Store XML Data to Variable LS2",
              "skip_execution": false,
              "variables_to_update": [
                {
                  "variable_to_update": "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.local.variable_workflow_02GGSFQRLVZRH2yBoIg1CzXrpfMeOuH1P1F$",
                  "variable_value_new": "$activity.definition_activity_02GC18ZIOQ87R0ubTkHIECJFYI7jOpqZwWh.output.response_body$"
                }
              ]
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02GC19GXZU1H91RDpFtHZndxjzGTkETt5to",
            "name": "Execute Python Script",
            "title": "Print XML Using Arguments from LS2",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": true,
              "display_name": "Print XML Using Arguments from LS2",
              "script": "import xml.etree.ElementTree as ET\nimport json\nimport sys\nxml_string = sys.argv[1]\nprint(xml_string)",
              "script_arguments": [
                "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.local.variable_workflow_02GGSFQRLVZRH2yBoIg1CzXrpfMeOuH1P1F$"
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02GC1LSJHPKK92OOIPVsHO0bzOIHpoUwZrF",
            "name": "Execute Python Script",
            "title": "Using Python Fetch name an ID from XML Stored in LS2",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": true,
              "display_name": "Using Python Fetch name an ID from XML Stored in LS2",
              "script": "import xml.etree.ElementTree as ET\nimport sys\n# The provided XML data\nxml_data = sys.argv[1]\n\n# Parse the XML data\nroot = ET.fromstring(xml_data)\n\n# Iterate through all item elements and find the name and id\nfor item in root.findall('.//item'):\n    name_element = item.find('name')\n    id_element = item.find('id')\n    name = name_element.text if name_element is not None else 'N/A'\n    id_ = id_element.text if id_element is not None else 'N/A'\n    print(f\"Name: {name}\")\n    print(f\"ID: {id_}\")",
              "script_arguments": [
                "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.local.variable_workflow_02GGSFQRLVZRH2yBoIg1CzXrpfMeOuH1P1F$"
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          }
        ]
      },
      {
        "unique_name": "definition_activity_02GC1YFNUGSXW4S7pcyPjSNzoCONaw7iQzB",
        "name": "Condition Block",
        "title": "Verify Group1 Python Adapters",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "conditions": [],
          "continue_on_failure": false,
          "display_name": "Verify Group1 Python Adapters",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_02GC1YFO0OOPA6pEPYNxIzm42RWilHzCS7e",
            "name": "Condition Branch",
            "title": "PassCase",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": {
                  "left_operand": {
                    "left_operand": {
                      "left_operand": {
                        "left_operand": {
                          "left_operand": {
                            "left_operand": "$activity.definition_activity_02GC14ILM9FZ86WdRRoLwhp9YJiAUWFi1vn.output.error.code$",
                            "operator": "eq",
                            "right_operand": "200"
                          },
                          "operator": "and",
                          "right_operand": {
                            "left_operand": "$activity.definition_activity_02GC16NI9ID7K5h0ULWYg4zJeg55DZ7lZ22.output.error.code$",
                            "operator": "eq",
                            "right_operand": "200"
                          }
                        },
                        "operator": "and",
                        "right_operand": {
                          "left_operand": "$activity.definition_activity_02GC174VC447W7DUIV7LI6VnuVcBV5D77k5.output.error.code$",
                          "operator": "eq",
                          "right_operand": "200"
                        }
                      },
                      "operator": "and",
                      "right_operand": {
                        "left_operand": "$activity.definition_activity_02GC18ZIOQ87R0ubTkHIECJFYI7jOpqZwWh.output.error.code$",
                        "operator": "eq",
                        "right_operand": "200"
                      }
                    },
                    "operator": "and",
                    "right_operand": {
                      "left_operand": "$activity.definition_activity_02GC19WK1K5S54thuyYT51FN4hZ015cUC4J.output.error.code$",
                      "operator": "eq",
                      "right_operand": "200"
                    }
                  },
                  "operator": "and",
                  "right_operand": {
                    "left_operand": "$activity.definition_activity_02GC19GXZU1H91RDpFtHZndxjzGTkETt5to.output.error.code$",
                    "operator": "eq",
                    "right_operand": "200"
                  }
                },
                "operator": "and",
                "right_operand": {
                  "left_operand": "$activity.definition_activity_02GC1LSJHPKK92OOIPVsHO0bzOIHpoUwZrF.output.error.code$",
                  "operator": "eq",
                  "right_operand": "200"
                }
              },
              "continue_on_failure": false,
              "display_name": "PassCase",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02GC23RY04IFU0Ku0Vhc0sfF68P5SGK1gEe",
                "name": "Set Variables",
                "title": "PassCase",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "PassCase",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.output.variable_workflow_02GC2332X4KTP5gm0fVXx4zXwDXvSybegEF$",
                      "variable_value_new": "Pass"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_02GC24MON90BA5KLLEVIUv4b0mIDkXeCbgG",
            "name": "Condition Branch",
            "title": "FailCase",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": {
                  "left_operand": {
                    "left_operand": {
                      "left_operand": {
                        "left_operand": {
                          "left_operand": {
                            "left_operand": "$activity.definition_activity_02GC14ILM9FZ86WdRRoLwhp9YJiAUWFi1vn.output.error.code$",
                            "operator": "ne",
                            "right_operand": "200"
                          },
                          "operator": "or",
                          "right_operand": {
                            "left_operand": "$activity.definition_activity_02GC16NI9ID7K5h0ULWYg4zJeg55DZ7lZ22.output.error.code$",
                            "operator": "ne",
                            "right_operand": "200"
                          }
                        },
                        "operator": "or",
                        "right_operand": {
                          "left_operand": "$activity.definition_activity_02GC174VC447W7DUIV7LI6VnuVcBV5D77k5.output.error.code$",
                          "operator": "ne",
                          "right_operand": "200"
                        }
                      },
                      "operator": "or",
                      "right_operand": {
                        "left_operand": "$activity.definition_activity_02GC18ZIOQ87R0ubTkHIECJFYI7jOpqZwWh.output.error.code$",
                        "operator": "ne",
                        "right_operand": "200"
                      }
                    },
                    "operator": "or",
                    "right_operand": {
                      "left_operand": "$activity.definition_activity_02GC19WK1K5S54thuyYT51FN4hZ015cUC4J.output.error.code$",
                      "operator": "ne",
                      "right_operand": "200"
                    }
                  },
                  "operator": "or",
                  "right_operand": {
                    "left_operand": "$activity.definition_activity_02GC19GXZU1H91RDpFtHZndxjzGTkETt5to.output.error.code$",
                    "operator": "ne",
                    "right_operand": "200"
                  }
                },
                "operator": "or",
                "right_operand": {
                  "left_operand": "$activity.definition_activity_02GC1LSJHPKK92OOIPVsHO0bzOIHpoUwZrF.output.error.code$",
                  "operator": "ne",
                  "right_operand": "200"
                }
              },
              "continue_on_failure": false,
              "display_name": "FailCase",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02GC24MON9ZP75P8sPdkHDKtI37Q9rE87da",
                "name": "Set Variables",
                "title": "FailCase",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "FailCase",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.output.variable_workflow_02GC2332X4KTP5gm0fVXx4zXwDXvSybegEF$",
                      "variable_value_new": "Fail"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_02GC1GGAVMUDS4CqbtTICEIFgZef5q730Qv",
        "name": "Group",
        "title": "Fetch Non-Atomics WF and Process from Python",
        "type": "logic.group",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Fetch Non-Atomics WF and Process from Python",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "actions": [
          {
            "unique_name": "definition_activity_02GC1FEZPSM7S4cZwmD1UQLLUphZqxp2AvO",
            "name": "Execute Python Script",
            "title": "Fetch HTTP Response",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": true,
              "display_name": "Fetch HTTP Response",
              "script": "import requests\nimport json\n\nurl = \"https://automate.int.iroh.site/api/v1.1/workflows?is_atomic=false\u0026start=0\u0026limit=4199\u0026sort_by=updated_on\"\n\npayload = json.dumps({\n  \"categories\": [],\n  \"owner\": []\n})\nheaders = {\n  'authority': 'automate.int.iroh.site',\n  'accept': 'application/json, text/plain, */*',\n  'accept-language': 'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7',\n  'authorization': 'Bearer $activity.definition_activity_02GC15FJYS9CJ6WNUfK3ixMLaY2Du47NVk7.output.variable_workflow_02BC75FY6K85Y7UxbMgUx2RiWsymGSVCmQm$',\n  'cache-control': 'no-cache',\n  'content-type': 'application/json',\n  'origin': 'https://xdr.int.iroh.site',\n  'pragma': 'no-cache',\n  'sec-ch-ua': '\"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"',\n  'sec-ch-ua-mobile': '?0',\n  'sec-ch-ua-platform': '\"macOS\"',\n  'sec-fetch-dest': 'empty',\n  'sec-fetch-mode': 'cors',\n  'sec-fetch-site': 'same-site',\n  'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36',\n  'x-csco-trxid': '75c2f07d'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\n\nprint(response.text)",
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02GC1FEZPUY2N7HHcUNHpmpYdSSEq674t7C",
            "name": "Set Variables",
            "title": "Strore Response in LS1",
            "type": "core.set_multiple_variables",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": true,
              "display_name": "Strore Response in LS1",
              "skip_execution": false,
              "variables_to_update": [
                {
                  "variable_to_update": "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.local.variable_workflow_02GC16JNQ9C4715PPjgPK50QfNcZdVHyYoA$",
                  "variable_value_new": "$activity.definition_activity_02GC1FEZPSM7S4cZwmD1UQLLUphZqxp2AvO.output.response_body$"
                }
              ]
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02GCLFU06LP6848qKzi1m4yJiVMrh3tzapB",
            "name": "Execute Python Script",
            "title": "Fetch HTTP Response (Fetch Json More that 10MB)",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": true,
              "display_name": "Fetch HTTP Response (Fetch Json More that 10MB)",
              "script": "import requests\nimport json\n\nurl = \"https://automate.int.iroh.site/api/v1.1/workflows?is_atomic=false\u0026start=0\u0026limit=9000\u0026sort_by=updated_on\"\n\npayload = json.dumps({\n  \"categories\": [],\n  \"owner\": []\n})\nheaders = {\n  'authority': 'automate.int.iroh.site',\n  'accept': 'application/json, text/plain, */*',\n  'accept-language': 'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7',\n  'authorization': 'Bearer $activity.definition_activity_02GC15FJYS9CJ6WNUfK3ixMLaY2Du47NVk7.output.variable_workflow_02BC75FY6K85Y7UxbMgUx2RiWsymGSVCmQm$',\n  'cache-control': 'no-cache',\n  'content-type': 'application/json',\n  'origin': 'https://xdr.int.iroh.site',\n  'pragma': 'no-cache',\n  'sec-ch-ua': '\"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"',\n  'sec-ch-ua-mobile': '?0',\n  'sec-ch-ua-platform': '\"macOS\"',\n  'sec-fetch-dest': 'empty',\n  'sec-fetch-mode': 'cors',\n  'sec-fetch-site': 'same-site',\n  'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36',\n  'x-csco-trxid': '75c2f07d'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\n\nprint(response.text)",
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02GCLGX8H7SXE6exrVZkS7xTRwOQMWfaPWo",
            "name": "Set Variables",
            "title": "Strore Response in LS3 (Expected to Fail)",
            "type": "core.set_multiple_variables",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": true,
              "display_name": "Strore Response in LS3 (Expected to Fail)",
              "skip_execution": false,
              "variables_to_update": [
                {
                  "variable_to_update": "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.local.variable_workflow_02GGSFUV6431L5NgrvBfW5aiegFuOaO9kvt$",
                  "variable_value_new": "$activity.definition_activity_02GCLFU06LP6848qKzi1m4yJiVMrh3tzapB.output.response_body$"
                }
              ]
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02GC1FEZPYK3V3F26wYTDCqXLcdXiQl347R",
            "name": "Execute Python Script",
            "title": "Fetch name and ID from LS1 Variable",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": true,
              "display_name": "Fetch name and ID from LS1 Variable",
              "script": "import json\nimport sys \ndata = json.loads(sys.argv[1])\njson_data = json.loads(sys.argv[2])\nuser_names = [user['name'] for user in data['users']]\nprint(user_names)\n# Iterate over the list of results in json_data and extract name and id\nfor item in json_data['results']:\n    name = item['name']\n    _id = item['id']\n    print(\"Name:\", name)\n    print(\"ID:\", _id)\n    print()",
              "script_arguments": [
                "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.local.variable_workflow_02GC188EZHMW94Meu47fl5rEWkAldmiLi52$",
                "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.local.variable_workflow_02GC16JNQ9C4715PPjgPK50QfNcZdVHyYoA$"
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02GC1FEZPZKSX6BWZcjScrVxYm12E62Hspn",
            "name": "Execute Python Script",
            "title": "Convert Json to XML from LS1 Variable Json Source",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": true,
              "display_name": "Convert Json to XML from LS1 Variable Json Source",
              "script": "import json\nimport sys\nimport xml.etree.ElementTree as ET\n\ndef json_to_xml(json_data):\n    root = ET.Element(\"root\")\n    json_to_xml_recursive(json_data, root)\n    return ET.tostring(root, encoding=\"unicode\")\n\ndef json_to_xml_recursive(json_data, parent):\n    if isinstance(json_data, dict):\n        for key, value in json_data.items():\n            element = ET.Element(key)\n            parent.append(element)\n            json_to_xml_recursive(value, element)\n    elif isinstance(json_data, list):\n        for item in json_data:\n            element = ET.Element(\"item\")\n            parent.append(element)\n            json_to_xml_recursive(item, element)\n    else:\n        parent.text = str(json_data)\n\n# Example JSON data\njson_data = json.loads(sys.argv[1])\n# Convert JSON to XML\nxml_data = json_to_xml(json_data)\nprint(xml_data)",
              "script_arguments": [
                "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.local.variable_workflow_02GC16JNQ9C4715PPjgPK50QfNcZdVHyYoA$"
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02GC1FEZQ1DHQ1daVRETn9nHvClmXuUe4rb",
            "name": "Set Variables",
            "title": "Store XML Data to Variable in LS2",
            "type": "core.set_multiple_variables",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": true,
              "display_name": "Store XML Data to Variable in LS2",
              "skip_execution": false,
              "variables_to_update": [
                {
                  "variable_to_update": "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.local.variable_workflow_02GGSFQRLVZRH2yBoIg1CzXrpfMeOuH1P1F$",
                  "variable_value_new": "$activity.definition_activity_02GC1FEZPZKSX6BWZcjScrVxYm12E62Hspn.output.response_body$"
                }
              ]
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02GC1FEZQ3TIR6tNlDbRqDY727rJyeQNw8X",
            "name": "Execute Python Script",
            "title": "Print XML Using Arguments from LS2",
            "type": "python3.script",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": true,
              "display_name": "Print XML Using Arguments from LS2",
              "script": "import xml.etree.ElementTree as ET\nimport json\nimport sys\nxml_string = sys.argv[1]\nprint(xml_string)",
              "script_arguments": [
                "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.local.variable_workflow_02GGSFQRLVZRH2yBoIg1CzXrpfMeOuH1P1F$"
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          }
        ]
      },
      {
        "unique_name": "definition_activity_02GC2727REAFM5K0CQHqHYu2nxRbmH49GWd",
        "name": "Condition Block",
        "title": "Verify Group2 TestCases",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "conditions": [],
          "continue_on_failure": false,
          "display_name": "Verify Group2 TestCases",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_02GC2727XCP8Q5K0v5prKL1gIAvg2254Ret",
            "name": "Condition Branch",
            "title": "PassCase",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": {
                  "left_operand": {
                    "left_operand": {
                      "left_operand": {
                        "left_operand": {
                          "left_operand": {
                            "left_operand": "$activity.definition_activity_02GC1FEZPSM7S4cZwmD1UQLLUphZqxp2AvO.output.error.code$",
                            "operator": "eq",
                            "right_operand": "200"
                          },
                          "operator": "and",
                          "right_operand": {
                            "left_operand": "$activity.definition_activity_02GC1FEZPUY2N7HHcUNHpmpYdSSEq674t7C.output.error.code$",
                            "operator": "eq",
                            "right_operand": "200"
                          }
                        },
                        "operator": "and",
                        "right_operand": {
                          "left_operand": "$activity.definition_activity_02GC1FEZPYK3V3F26wYTDCqXLcdXiQl347R.output.error.code$",
                          "operator": "eq",
                          "right_operand": "200"
                        }
                      },
                      "operator": "and",
                      "right_operand": {
                        "left_operand": "$activity.definition_activity_02GC1FEZPZKSX6BWZcjScrVxYm12E62Hspn.output.error.code$",
                        "operator": "eq",
                        "right_operand": "200"
                      }
                    },
                    "operator": "and",
                    "right_operand": {
                      "left_operand": "$activity.definition_activity_02GC1FEZQ1DHQ1daVRETn9nHvClmXuUe4rb.output.error.code$",
                      "operator": "eq",
                      "right_operand": "200"
                    }
                  },
                  "operator": "and",
                  "right_operand": {
                    "left_operand": "$activity.definition_activity_02GC1FEZQ3TIR6tNlDbRqDY727rJyeQNw8X.output.error.code$",
                    "operator": "eq",
                    "right_operand": "200"
                  }
                },
                "operator": "and",
                "right_operand": {
                  "left_operand": "$activity.definition_activity_02GCLGX8H7SXE6exrVZkS7xTRwOQMWfaPWo.output.error.code$",
                  "operator": "eq",
                  "right_operand": "StatusRequestEntityTooLarge"
                }
              },
              "continue_on_failure": false,
              "display_name": "PassCase",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02GC27P58W7P145lPuk0gZVtDLVjV7JtySu",
                "name": "Set Variables",
                "title": "PassCase",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "PassCase",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.output.variable_workflow_02GC205RL4XXY5517rEFbu1gJ0wMFQ1LReu$",
                      "variable_value_new": "Pass"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_02GC29TTLXV0T5fxYp5Wr3Hs5K3YowGak2R",
            "name": "Condition Branch",
            "title": "FailCase",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": {
                  "left_operand": {
                    "left_operand": {
                      "left_operand": {
                        "left_operand": {
                          "left_operand": {
                            "left_operand": "$activity.definition_activity_02GC1FEZPSM7S4cZwmD1UQLLUphZqxp2AvO.output.error.code$",
                            "operator": "ne",
                            "right_operand": "200"
                          },
                          "operator": "or",
                          "right_operand": {
                            "left_operand": "$activity.definition_activity_02GC1FEZPUY2N7HHcUNHpmpYdSSEq674t7C.output.error.code$",
                            "operator": "ne",
                            "right_operand": "200"
                          }
                        },
                        "operator": "or",
                        "right_operand": {
                          "left_operand": "$activity.definition_activity_02GC1FEZPYK3V3F26wYTDCqXLcdXiQl347R.output.error.code$",
                          "operator": "ne",
                          "right_operand": "200"
                        }
                      },
                      "operator": "or",
                      "right_operand": {
                        "left_operand": "$activity.definition_activity_02GC1FEZPZKSX6BWZcjScrVxYm12E62Hspn.output.error.code$",
                        "operator": "ne",
                        "right_operand": "200"
                      }
                    },
                    "operator": "or",
                    "right_operand": {
                      "left_operand": "$activity.definition_activity_02GC1FEZQ1DHQ1daVRETn9nHvClmXuUe4rb.output.error.code$",
                      "operator": "ne",
                      "right_operand": "200"
                    }
                  },
                  "operator": "or",
                  "right_operand": {
                    "left_operand": "$activity.definition_activity_02GC1FEZQ3TIR6tNlDbRqDY727rJyeQNw8X.output.error.code$",
                    "operator": "ne",
                    "right_operand": "200"
                  }
                },
                "operator": "or",
                "right_operand": {
                  "left_operand": "$activity.definition_activity_02GCLGX8H7SXE6exrVZkS7xTRwOQMWfaPWo.output.error.code$",
                  "operator": "ne",
                  "right_operand": "StatusRequestEntityTooLarge"
                }
              },
              "continue_on_failure": false,
              "display_name": "FailCase",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02GC29TTLYUK40TxlQeEKnZjCfTvc0fHs1U",
                "name": "Set Variables",
                "title": "FailCase",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "FailCase",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.output.variable_workflow_02GC205RL4XXY5517rEFbu1gJ0wMFQ1LReu$",
                      "variable_value_new": "Fail"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_02GDDF36PUF0M4f8gEAXhGB5zuA374hIoPA",
        "name": "XDR_5929_File_Size_Test_Automation",
        "title": "XDR_5929_File_Size_Test_Automation",
        "type": "workflow.sub_workflow",
        "base_type": "subworkflow",
        "properties": {
          "continue_on_failure": true,
          "display_name": "XDR_5929_File_Size_Test_Automation",
          "input": {},
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "no_target": true
          },
          "workflow_id": "definition_workflow_02GCV5V82EYEX3srHzNxciTdt5yRJE1RVzl",
          "workflow_name": "XDR_5929_File_Size_Test_Automation"
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02GC2AUSUKI2C06QBpWgSl3OHJJqsvpMNqz",
        "name": "Condition Block",
        "title": "Verify Overall Status",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "conditions": [],
          "continue_on_failure": false,
          "display_name": "Verify Overall Status",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_02GC2AUT3BP925HsPCdNZXBADipDUm31xE2",
            "name": "Condition Branch",
            "title": "PassCase",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": {
                  "left_operand": {
                    "left_operand": "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.output.variable_workflow_02GC2332X4KTP5gm0fVXx4zXwDXvSybegEF$",
                    "operator": "eq",
                    "right_operand": "Pass"
                  },
                  "operator": "and",
                  "right_operand": {
                    "left_operand": "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.output.variable_workflow_02GC205RL4XXY5517rEFbu1gJ0wMFQ1LReu$",
                    "operator": "eq",
                    "right_operand": "Pass"
                  }
                },
                "operator": "and",
                "right_operand": {
                  "left_operand": "$activity.definition_activity_02GDDF36PUF0M4f8gEAXhGB5zuA374hIoPA.output.variable_workflow_02GDD0DELCIM82ftJqv0Iwb4wSTxIEBtiUn$",
                  "operator": "eq",
                  "right_operand": "Pass"
                }
              },
              "continue_on_failure": false,
              "display_name": "PassCase",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02GC2BKZOE26M04Se1a3rWhjfU4gOTcYE7X",
                "name": "Set Variables",
                "title": "PassCase",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "PassCase",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.output.variable_workflow_02GC2AROZDCLS4x3p0xbl1TGkpDjgB70dxk$",
                      "variable_value_new": "Pass"
                    }
                  ]
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02GHFPIRVEBCP5LDDI47QhEOSvCX7b7N7Av",
                "name": "Set Variables",
                "title": "EmailTable",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "EmailTable",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.output.variable_workflow_02GHFPFNK2XCT3mzIWykgx4VHE5gCGyVPGz$",
                      "variable_value_new": "\u003ch2\u003eXDR-5929 - Large String Support on Python Adapter Arguments \u003c/h2\u003e\n\u003ctable\u003e\n\u003ctr\u003e\n\u003cth\u003eActivity Name\u003c/th\u003e\n\u003cth\u003ePass/Fail\u003c/th\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd\u003eOverall Python Adapter Large String Status\u003c/td\u003e\n\u003ctd\u003e$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.output.variable_workflow_02GC2AROZDCLS4x3p0xbl1TGkpDjgB70dxk$\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd\u003eGroup 1 TestCases for Python Adapter Large String Status\u003c/td\u003e\n\u003ctd\u003e$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.output.variable_workflow_02GC2332X4KTP5gm0fVXx4zXwDXvSybegEF$\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd\u003eGroup 2 TestCases for Python Adapter Large String Status\u003c/td\u003e\n\u003ctd\u003e$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.output.variable_workflow_02GC205RL4XXY5517rEFbu1gJ0wMFQ1LReu$\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003c/table\u003e"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_02GC2COKHV6H8487LcW44006IorQejzcNHU",
            "name": "Condition Branch",
            "title": "FailCase",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": {
                  "left_operand": {
                    "left_operand": "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.output.variable_workflow_02GC2332X4KTP5gm0fVXx4zXwDXvSybegEF$",
                    "operator": "ne",
                    "right_operand": "Pass"
                  },
                  "operator": "or",
                  "right_operand": {
                    "left_operand": "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.output.variable_workflow_02GC205RL4XXY5517rEFbu1gJ0wMFQ1LReu$",
                    "operator": "ne",
                    "right_operand": "Pass"
                  }
                },
                "operator": "or",
                "right_operand": {
                  "left_operand": "$activity.definition_activity_02GDDF36PUF0M4f8gEAXhGB5zuA374hIoPA.output.variable_workflow_02GDD0DELCIM82ftJqv0Iwb4wSTxIEBtiUn$",
                  "operator": "eq",
                  "right_operand": "Fail"
                }
              },
              "continue_on_failure": false,
              "display_name": "FailCase",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02GC2COKHW03E6GJ56yW5UgSPzesjtJ1Cr7",
                "name": "Set Variables",
                "title": "FailCase",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "FailCase",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.output.variable_workflow_02GC2AROZDCLS4x3p0xbl1TGkpDjgB70dxk$",
                      "variable_value_new": "Fail"
                    }
                  ]
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02GHFRVWSIY5B7IQcsW3LuvrIlWJh0b2ODl",
                "name": "Set Variables",
                "title": "EmailTable",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "EmailTable",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.output.variable_workflow_02GHFPFNK2XCT3mzIWykgx4VHE5gCGyVPGz$",
                      "variable_value_new": "\u003ch2\u003eXDR-5929 - Large String Support on Python Adapter Arguments \u003c/h2\u003e\n\u003ctable\u003e\n\u003ctr\u003e\n\u003cth\u003eActivity Name\u003c/th\u003e\n\u003cth\u003ePass/Fail\u003c/th\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd\u003eOverall Python Adapter Large String Status\u003c/td\u003e\n\u003ctd\u003e$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.output.variable_workflow_02GC2AROZDCLS4x3p0xbl1TGkpDjgB70dxk$\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd\u003eGroup 1 TestCases for Python Adapter Large String Status\u003c/td\u003e\n\u003ctd\u003e$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.output.variable_workflow_02GC2332X4KTP5gm0fVXx4zXwDXvSybegEF$\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd\u003eGroup 2 TestCases for Python Adapter Large String Status\u003c/td\u003e\n\u003ctd\u003e$workflow.definition_workflow_02GC14CDT6MYF5OCT25UrpXyCX2qUEuuD4D.output.variable_workflow_02GC205RL4XXY5517rEFbu1gJ0wMFQ1LReu$\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003c/table\u003e"
                    }
                  ]
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02GHFP2GNK24X4ulG0uKmhPdqPs9iGu12AL",
                "name": "Completed",
                "title": "Failed",
                "type": "logic.completed",
                "base_type": "activity",
                "properties": {
                  "completion_type": "failed-completed",
                  "continue_on_failure": false,
                  "display_name": "Failed",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      }
    ],
    "categories": [
      "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
    ]
  },
  "targets": {
    "definition_target_02GHIF7SYJ3XE2PY2aOQMso19qnNYqg5dt9": {
      "unique_name": "definition_target_02GHIF7SYJ3XE2PY2aOQMso19qnNYqg5dt9",
      "name": "platform-custom-int",
      "title": "platform-custom-int",
      "type": "web-service.endpoint",
      "base_type": "target",
      "object_type": "definition_target",
      "properties": {
        "description": "",
        "disable_certificate_validation": true,
        "display_name": "platform-custom-int",
        "host": "visibility.int.iroh.site",
        "ignore_proxy": true,
        "no_runtime_user": true,
        "path": "/iroh",
        "protocol": "https"
      }
    }
  },
  "table_types": {
    "tabletype_02G2GR45SSM604Ni2mNxrikwqqEjjLCgMvj": {
      "unique_name": "tabletype_02G2GR45SSM604Ni2mNxrikwqqEjjLCgMvj",
      "data_type": "datatype.tabletype",
      "display_name": "XDR-1252-Results",
      "columns": [
        {
          "name": "TestResults",
          "title": "TestResults",
          "type": "string"
        }
      ],
      "base_type": "datatype",
      "object_type": "tabletype"
    }
  },
  "subworkflows": [
    {
      "workflow": {
        "unique_name": "definition_workflow_02BC75FXY8V6Q7fCnqF2hIiteIL3tPcTIMX",
        "name": "SXO- Create Token-Generate Token",
        "title": "SXO- Create Token-Generate Token",
        "type": "generic.workflow",
        "base_type": "workflow",
        "variables": [
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "token",
              "type": "datatype.string",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02BC75FY6K85Y7UxbMgUx2RiWsymGSVCmQm",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "input",
              "name": "client_id",
              "type": "datatype.string",
              "is_required": true,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02BC75FY6KJQ31bp06fvoXJ188gYh1wbUa7",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "Fail",
              "scope": "output",
              "name": "Token Generation Status",
              "type": "datatype.string",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02DJBM55OAE734oLfvIKzE4MxFyiXIrVcYR",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "input",
              "name": "client-secret",
              "type": "datatype.string",
              "is_required": true,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02BC8GA3DL7UT2XvjCn2jMUeOtCfsmMDZy4",
            "object_type": "variable_workflow"
          }
        ],
        "properties": {
          "atomic": {
            "is_atomic": false
          },
          "delete_workflow_instance": false,
          "description": "This WF Used Generate Token for Tenant Using Client ID and Client Secret",
          "display_name": "SXO- Create Token-Generate Token",
          "runtime_user": {
            "target_default": true
          },
          "target": {
            "target_type": "web-service.endpoint",
            "target_id": "$module_target;Cisco XDR;securex:ao:iroh_api$",
            "execute_on_workflow_target": true
          }
        },
        "object_type": "definition_workflow",
        "actions": [
          {
            "unique_name": "definition_activity_02BC75G22FOUZ4EkPmUFkyaUDv7ufY6XoyD",
            "name": "HTTP Request",
            "title": "Create token",
            "type": "web-service.http_request",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "allow_auto_redirect": true,
              "allow_headers_redirect": false,
              "body": "client_secret=$workflow.definition_workflow_02BC75FXY8V6Q7fCnqF2hIiteIL3tPcTIMX.input.variable_workflow_02BC8GA3DL7UT2XvjCn2jMUeOtCfsmMDZy4$\u0026grant_type=client_credentials\u0026client_id=$workflow.definition_workflow_02BC75FXY8V6Q7fCnqF2hIiteIL3tPcTIMX.input.variable_workflow_02BC75FY6KJQ31bp06fvoXJ188gYh1wbUa7$",
              "continue_on_error_status_code": false,
              "continue_on_failure": true,
              "custom_headers": [
                {
                  "name": "Content-Type",
                  "value": "application/x-www-form-urlencoded"
                }
              ],
              "display_name": "Create token",
              "method": "POST",
              "relative_url": "/oauth2/token",
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "use_workflow_target": true
              }
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02BC75G34XD9J77fLUiyGdXiTwppF2BuwNV",
            "name": "JSONPath Query",
            "title": "Get Token",
            "type": "corejava.jsonpathquery",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": true,
              "display_name": "Get Token",
              "input_json": "$activity.definition_activity_02BC75G22FOUZ4EkPmUFkyaUDv7ufY6XoyD.output.response_body$",
              "jsonpath_queries": [
                {
                  "jsonpath_query": "$.access_token",
                  "jsonpath_query_name": "token",
                  "jsonpath_query_type": "string",
                  "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                }
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02BC75G4HIDLS4gLpshXHmYqx7felpNEF3o",
            "name": "Set Variables",
            "title": "Set token output variable to generated token",
            "type": "core.set_multiple_variables",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": true,
              "display_name": "Set token output variable to generated token",
              "skip_execution": false,
              "variables_to_update": [
                {
                  "variable_to_update": "$workflow.definition_workflow_02BC75FXY8V6Q7fCnqF2hIiteIL3tPcTIMX.output.variable_workflow_02BC75FY6K85Y7UxbMgUx2RiWsymGSVCmQm$",
                  "variable_value_new": "$activity.definition_activity_02BC75G34XD9J77fLUiyGdXiTwppF2BuwNV.output.jsonpath_queries.token$"
                }
              ]
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02DJBMAELR6VK7CssqESkx4t4o9vPm3Zq6Q",
            "name": "Condition Block",
            "title": "Verify Token Generation",
            "type": "logic.if_else",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Verify Token Generation",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_02DJBMAESCT805PwD1svfBaW7TxxRzXFyzr",
                "name": "Condition Branch",
                "title": "Pass Case",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": {
                      "left_operand": {
                        "left_operand": "$activity.definition_activity_02BC75G22FOUZ4EkPmUFkyaUDv7ufY6XoyD.output.error.code$",
                        "operator": "eq",
                        "right_operand": "200"
                      },
                      "operator": "and",
                      "right_operand": {
                        "left_operand": "$activity.definition_activity_02BC75G34XD9J77fLUiyGdXiTwppF2BuwNV.output.error.code$",
                        "operator": "eq",
                        "right_operand": "200"
                      }
                    },
                    "operator": "and",
                    "right_operand": {
                      "left_operand": "$activity.definition_activity_02BC75G4HIDLS4gLpshXHmYqx7felpNEF3o.output.error.code$",
                      "operator": "eq",
                      "right_operand": "200"
                    }
                  },
                  "continue_on_failure": false,
                  "display_name": "Pass Case",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02DJBNQ2F3PNZ0AKjBx061Nt1mgaPTGY3IK",
                    "name": "Set Variables",
                    "title": "PassCase",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "PassCase",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_02BC75FXY8V6Q7fCnqF2hIiteIL3tPcTIMX.output.variable_workflow_02DJBM55OAE734oLfvIKzE4MxFyiXIrVcYR$",
                          "variable_value_new": "Pass"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  }
                ]
              },
              {
                "unique_name": "definition_activity_02DJBO37G1DKK2Wz94WUSToBiRzqwf6nJp4",
                "name": "Condition Branch",
                "title": "Fail Case",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": {
                      "left_operand": {
                        "left_operand": "$activity.definition_activity_02BC75G22FOUZ4EkPmUFkyaUDv7ufY6XoyD.output.error.code$",
                        "operator": "ne",
                        "right_operand": "200"
                      },
                      "operator": "or",
                      "right_operand": {
                        "left_operand": "$activity.definition_activity_02BC75G34XD9J77fLUiyGdXiTwppF2BuwNV.output.error.code$",
                        "operator": "ne",
                        "right_operand": "200"
                      }
                    },
                    "operator": "or",
                    "right_operand": {
                      "left_operand": "$activity.definition_activity_02BC75G4HIDLS4gLpshXHmYqx7felpNEF3o.output.error.code$",
                      "operator": "ne",
                      "right_operand": "200"
                    }
                  },
                  "continue_on_failure": false,
                  "display_name": "Fail Case",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02DJO4X2EUMJR6ZKxfWWb3fyUYJHxSkucwM",
                    "name": "Completed",
                    "title": "Failed",
                    "type": "logic.completed",
                    "base_type": "activity",
                    "properties": {
                      "completion_type": "failed-completed",
                      "continue_on_failure": false,
                      "display_name": "Failed",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  }
                ]
              }
            ]
          }
        ],
        "categories": [
          "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
        ]
      }
    },
    {
      "workflow": {
        "unique_name": "definition_workflow_02GCV5V82EYEX3srHzNxciTdt5yRJE1RVzl",
        "name": "XDR_5929_File_Size_Test_Automation",
        "title": "XDR_5929_File_Size_Test_Automation",
        "type": "generic.workflow",
        "base_type": "workflow",
        "variables": [
          {
            "schema_id": "tabletype_02G2GR45SSM604Ni2mNxrikwqqEjjLCgMvj",
            "properties": {
              "scope": "output",
              "name": "Python For Each TestStatus",
              "type": "datatype.table",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02GDCLSVZJHSE5UOgBpa16V4H6jStutCtZR",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "Pass",
              "scope": "output",
              "name": "File Size TestStatus",
              "type": "datatype.string",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02GDD0DELCIM82ftJqv0Iwb4wSTxIEBtiUn",
            "object_type": "variable_workflow"
          }
        ],
        "properties": {
          "atomic": {
            "is_atomic": false
          },
          "delete_workflow_instance": false,
          "display_name": "XDR_5929_File_Size_Test_Automation",
          "runtime_user": {
            "target_default": true
          },
          "target": {
            "no_target": true
          }
        },
        "object_type": "definition_workflow",
        "actions": [
          {
            "unique_name": "definition_activity_02GCV60TM1COZ2oBn5gcqKQo23PPgcg1kWL",
            "name": "Split String",
            "title": "Various File sizes specified by number of Json Data",
            "type": "core.splitstring",
            "base_type": "activity",
            "properties": {
              "boundaries": [
                {
                  "boundary": ","
                }
              ],
              "continue_on_failure": false,
              "display_name": "Various File sizes specified by number of Json Data",
              "input_string": "5000, 10000, 15000, 20000, 24990",
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02GCXA0SLX0F13MofSEq8Y2lDevK0a8nHWz",
            "name": "For Each",
            "title": "For Each",
            "type": "logic.for_each",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "For Each",
              "skip_execution": false,
              "source_array": "$activity.definition_activity_02GCV60TM1COZ2oBn5gcqKQo23PPgcg1kWL.output.parts$"
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02GCXSI3H5SUW4T5Gb1c6ugnu4nkwk5cpkN",
                "name": "Execute Python Script",
                "title": "Convert Str To Int",
                "type": "python3.script",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "display_name": "Convert Str To Int",
                  "script": "string_number = \"$activity.definition_activity_02GCXA0SLX0F13MofSEq8Y2lDevK0a8nHWz.input.source_array[@]$\"\ninteger_number = int(string_number)",
                  "script_queries": [
                    {
                      "script_query": "integer_number",
                      "script_query_name": "File_size",
                      "script_query_type": "integer"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02GCXPWT92GJU6vGklNr0DvuXt0jslZaP6R",
                "name": "SJ_Python_Output_To Argument_XDR_5929",
                "title": "SJ_Python_Output_To Argument_XDR_5929",
                "type": "workflow.sub_workflow",
                "base_type": "subworkflow",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "SJ_Python_Output_To Argument_XDR_5929",
                  "input": {
                    "variable_workflow_02GC8CO28117N4rVRSaxZqpZEbySlARwa8e": "$activity.definition_activity_02GCXSI3H5SUW4T5Gb1c6ugnu4nkwk5cpkN.output.script_queries.File_size$"
                  },
                  "runtime_user": {
                    "target_default": true
                  },
                  "skip_execution": false,
                  "target": {
                    "no_target": true
                  },
                  "workflow_id": "definition_workflow_02GBDM3H9SQ213HwTrrB0SKCxVpQBaiycwk",
                  "workflow_name": "XDR_Python_Output_To Argument_XDR_5929"
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02GDCM961P5B17IIDhNwmoUcNduOrGTZv8t",
                "name": "Condition Block",
                "title": "Verify ForEach Status",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "conditions": [],
                  "continue_on_failure": false,
                  "display_name": "Verify ForEach Status",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_02GDCM9A43QF84w9UQIyxi7nTzCOxtwNgQ1",
                    "name": "Condition Branch",
                    "title": "PassCase",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": {
                          "left_operand": "$activity.definition_activity_02GCXSI3H5SUW4T5Gb1c6ugnu4nkwk5cpkN.output.error.code$",
                          "operator": "eq",
                          "right_operand": "200"
                        },
                        "operator": "and",
                        "right_operand": {
                          "left_operand": "$activity.definition_activity_02GCXPWT92GJU6vGklNr0DvuXt0jslZaP6R.output.variable_workflow_02GDC5IY2AOH32gjYh21hzuqZaOJYBh8sd6$",
                          "operator": "eq",
                          "right_operand": "Pass"
                        }
                      },
                      "continue_on_failure": false,
                      "display_name": "PassCase",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_02GDCP527UIV209kU7A2eAuqssh7ZbaKTnJ",
                        "name": "Add Row to Table",
                        "title": "Update Table with Pass",
                        "type": "core.addrowtotable",
                        "base_type": "activity",
                        "properties": {
                          "action_timeout": 180,
                          "continue_on_failure": false,
                          "display_name": "Update Table with Pass",
                          "input_table": "$workflow.definition_workflow_02GCV5V82EYEX3srHzNxciTdt5yRJE1RVzl.output.variable_workflow_02GDCLSVZJHSE5UOgBpa16V4H6jStutCtZR$",
                          "row": [
                            {
                              "key": "TestResults",
                              "type": "string",
                              "value": "Pass"
                            }
                          ],
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  },
                  {
                    "unique_name": "definition_activity_02GDCPCP6DPPM2aVrSzBQ68pUyGKrxsBJ6p",
                    "name": "Condition Branch",
                    "title": "Update Table with Fail",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": {
                          "left_operand": "$activity.definition_activity_02GCXSI3H5SUW4T5Gb1c6ugnu4nkwk5cpkN.output.error.code$",
                          "operator": "ne",
                          "right_operand": "200"
                        },
                        "operator": "or",
                        "right_operand": {
                          "left_operand": "$activity.definition_activity_02GCXPWT92GJU6vGklNr0DvuXt0jslZaP6R.output.variable_workflow_02GDC5IY2AOH32gjYh21hzuqZaOJYBh8sd6$",
                          "operator": "ne",
                          "right_operand": "Pass"
                        }
                      },
                      "continue_on_failure": false,
                      "display_name": "Update Table with Fail",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_02GDCPCPKGJ4U4nlWx8jXTjTDWabLMqMu4r",
                        "name": "Add Row to Table",
                        "title": "Add Row to Table",
                        "type": "core.addrowtotable",
                        "base_type": "activity",
                        "properties": {
                          "action_timeout": 180,
                          "continue_on_failure": false,
                          "display_name": "Add Row to Table",
                          "input_table": "$workflow.definition_workflow_02GCV5V82EYEX3srHzNxciTdt5yRJE1RVzl.output.variable_workflow_02GDCLSVZJHSE5UOgBpa16V4H6jStutCtZR$",
                          "row": [
                            {
                              "key": "TestResults",
                              "type": "string",
                              "value": "Fail"
                            }
                          ],
                          "skip_execution": false
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "unique_name": "definition_activity_02GDCZORHEFAM4ZdNnwHZjqbsji6ACy9lDG",
            "name": "Select from Table",
            "title": "Select from Table",
            "type": "core.selectfromtable",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "columns": [
                {
                  "column_name": "TestResults",
                  "column_type": "string"
                }
              ],
              "continue_on_failure": false,
              "display_name": "Select from Table",
              "input_table": "$workflow.definition_workflow_02GCV5V82EYEX3srHzNxciTdt5yRJE1RVzl.output.variable_workflow_02GDCLSVZJHSE5UOgBpa16V4H6jStutCtZR$",
              "number_of_rows": {
                "all_rows": true
              },
              "persist_output": false,
              "skip_execution": false,
              "sorting": {
                "no_sort": true
              }
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02GDCZYSVC52A3kQ4P1CnD2VEEhR4H9GtNq",
            "name": "Condition Block",
            "title": "Enter this Block if Table response has Fail",
            "type": "logic.if_else",
            "base_type": "activity",
            "properties": {
              "conditions": [],
              "continue_on_failure": false,
              "display_name": "Enter this Block if Table response has Fail",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_02GDCZYYQB4SR4C6TMaLDEXPCuEPKNVQqdo",
                "name": "Condition Branch",
                "title": "Verify Fail form Table Response",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": "$activity.definition_activity_02GDCZORHEFAM4ZdNnwHZjqbsji6ACy9lDG.output.response_body$",
                    "operator": "mregex",
                    "right_operand": ".*Fail"
                  },
                  "continue_on_failure": false,
                  "display_name": "Verify Fail form Table Response",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02GDD7MRMZGSE5CunMYXaeU6L8pgh1DG8aK",
                    "name": "Set Variables",
                    "title": "Failed",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "Failed",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_02GCV5V82EYEX3srHzNxciTdt5yRJE1RVzl.output.variable_workflow_02GDD0DELCIM82ftJqv0Iwb4wSTxIEBtiUn$",
                          "variable_value_new": "Fail"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  },
                  {
                    "unique_name": "definition_activity_02GDD814A8ZXG7kOWkhtmqSVFJ1zLry1bf6",
                    "name": "Completed",
                    "title": "Failed",
                    "type": "logic.completed",
                    "base_type": "activity",
                    "properties": {
                      "completion_type": "failed-completed",
                      "continue_on_failure": false,
                      "display_name": "Failed",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  }
                ]
              }
            ]
          },
          {
            "unique_name": "definition_activity_02GDD8CGOBTQ30AeW4D4vbb77pPAc6wGBtp",
            "name": "Set Variables",
            "title": "TestPassed",
            "type": "core.set_multiple_variables",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "TestPassed",
              "skip_execution": false,
              "variables_to_update": [
                {
                  "variable_to_update": "$workflow.definition_workflow_02GCV5V82EYEX3srHzNxciTdt5yRJE1RVzl.output.variable_workflow_02GDD0DELCIM82ftJqv0Iwb4wSTxIEBtiUn$",
                  "variable_value_new": "Pass"
                }
              ]
            },
            "object_type": "definition_activity"
          }
        ],
        "categories": [
          "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
        ]
      },
      "subworkflows": [
        {
          "workflow": {
            "unique_name": "definition_workflow_02GBDM3H9SQ213HwTrrB0SKCxVpQBaiycwk",
            "name": "XDR_Python_Output_To Argument_XDR_5929",
            "title": "XDR_Python_Output_To Argument_XDR_5929",
            "type": "generic.workflow",
            "base_type": "workflow",
            "variables": [
              {
                "schema_id": "datatype.string",
                "properties": {
                  "value": "Fail",
                  "scope": "output",
                  "name": "TestOutput",
                  "type": "datatype.string",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false
                },
                "unique_name": "variable_workflow_02GDC5IY2AOH32gjYh21hzuqZaOJYBh8sd6",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.integer",
                "properties": {
                  "value": 0,
                  "scope": "input",
                  "name": "Type a value 24990 or less  to get a file size 0f 9.3mb or less",
                  "type": "datatype.integer",
                  "is_required": false,
                  "display_on_wizard": true,
                  "is_invisible": false
                },
                "unique_name": "variable_workflow_02GC8CO28117N4rVRSaxZqpZEbySlARwa8e",
                "object_type": "variable_workflow"
              },
              {
                "schema_id": "datatype.large_string",
                "properties": {
                  "value": "",
                  "scope": "local",
                  "name": "LS_output",
                  "type": "datatype.large_string",
                  "is_required": false,
                  "display_on_wizard": false,
                  "is_invisible": false
                },
                "unique_name": "variable_workflow_02GBDP4FFVROG6mqyug3e80OVSvVBO5WKG3",
                "object_type": "variable_workflow"
              }
            ],
            "properties": {
              "atomic": {
                "is_atomic": false
              },
              "delete_workflow_instance": false,
              "display_name": "XDR_Python_Output_To Argument_XDR_5929",
              "runtime_user": {
                "target_default": true
              },
              "target": {
                "no_target": true
              }
            },
            "object_type": "definition_workflow",
            "actions": [
              {
                "unique_name": "definition_activity_02GBDM7KIJHSC6AMfc4h74VMEzI9ASaQvhY",
                "name": "Execute Python Script",
                "title": "Python Script To Generate Employee Json",
                "type": "python3.script",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": true,
                  "display_name": "Python Script To Generate Employee Json",
                  "script": "import json\nimport io\nimport random\nimport string\nimport sys\n\n\ndef generate_random_string(length):\n    \"\"\"Generate a random string of fixed length.\"\"\"\n    letters = string.ascii_letters\n    return ''.join(random.choice(letters) for i in range(length))\n\ndef generate_employee_data(num_entries):\n    \"\"\"Generate a list of employee data with unique userId, firstName, and lastName.\"\"\"\n    employees = []\n    for i in range(num_entries):\n        user_id = generate_random_string(8)\n        first_name = generate_random_string(5)\n        last_name = generate_random_string(5)\n        employee = {\n            \"userId\": user_id,\n            \"jobTitleName\": \"Developer\",\n            \"firstName\": first_name,\n            \"lastName\": last_name,\n            \"preferredFullName\": f\"{first_name} {last_name}\",\n            \"employeeCode\": f\"E{i+1}\",\n            \"region\": \"CA\",\n            \"phoneNumber\": f\"408-{random.randint(1000000, 9999999)}\",\n            \"emailAddress\": f\"{first_name.lower()}.{last_name.lower()}@example.com\"\n        }\n        employees.append(employee)\n    return employees\n\n# Define the number of entries to ensure the JSON data is of a substantial size\nnum_entries = $workflow.definition_workflow_02GBDM3H9SQ213HwTrrB0SKCxVpQBaiycwk.input.variable_workflow_02GC8CO28117N4rVRSaxZqpZEbySlARwa8e$  # Adjust this number as needed\n\n# Generate employee data\nemployees = generate_employee_data(num_entries)\n\n# Create the JSON structure\ndata = {\n    \"Employees\": employees\n}\n\n# Use StringIO to write the JSON data to a variable\njson_var = io.StringIO()\njson.dump(data, json_var, indent=4)\njson_content = json_var.getvalue()\n\nprint(json_content)  # Print the first 500 characters for verification",
                  "script_arguments": [],
                  "script_queries": [],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02GC0014U6NWF5dhwbirLuYXxs3m77pSdnU",
                "name": "Set Variables",
                "title": "Set LS_Output To Reponse",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": true,
                  "display_name": "Set LS_Output To Reponse",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02GBDM3H9SQ213HwTrrB0SKCxVpQBaiycwk.local.variable_workflow_02GBDP4FFVROG6mqyug3e80OVSvVBO5WKG3$",
                      "variable_value_new": "$activity.definition_activity_02GBDM7KIJHSC6AMfc4h74VMEzI9ASaQvhY.output.response_body$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02GC0FEQAEK546Rlwllk4WRW5tYpjdA0qxs",
                "name": "Execute Python Script",
                "title": "Python Script Tp Select FirstName Of All Employees",
                "type": "python3.script",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": true,
                  "display_name": "Python Script Tp Select FirstName Of All Employees",
                  "script": "import json\nimport sys\ndata = json.loads(sys.argv[1])\nprint(data)\nfor emp in data[\"Employees\"]:\n    print(emp[\"firstName\"])",
                  "script_arguments": [
                    "$workflow.definition_workflow_02GBDM3H9SQ213HwTrrB0SKCxVpQBaiycwk.local.variable_workflow_02GBDP4FFVROG6mqyug3e80OVSvVBO5WKG3$"
                  ],
                  "script_queries": [],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02GDC4YRF1FNL03XGN0Bbwao20IgSzMb4uk",
                "name": "Condition Block",
                "title": "Verify FileSize TestStatus",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "conditions": [],
                  "continue_on_failure": false,
                  "display_name": "Verify FileSize TestStatus",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_02GDC4YVJQI8R53uWczKMfL8IBmLHPEKTNo",
                    "name": "Condition Branch",
                    "title": "PassCase",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": "$activity.definition_activity_02GC0FEQAEK546Rlwllk4WRW5tYpjdA0qxs.output.error.code$",
                        "operator": "eq",
                        "right_operand": "200"
                      },
                      "continue_on_failure": false,
                      "display_name": "PassCase",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_02GDC9DCTB0YZ0NuMvpr1u1VpvSJjYJMa46",
                        "name": "Set Variables",
                        "title": "Pass if all conditions all matched",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Pass if all conditions all matched",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_02GBDM3H9SQ213HwTrrB0SKCxVpQBaiycwk.output.variable_workflow_02GDC5IY2AOH32gjYh21hzuqZaOJYBh8sd6$",
                              "variable_value_new": "Pass"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              }
            ],
            "categories": [
              "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
            ]
          }
        }
      ],
      "dependent_workflows": [
        "definition_workflow_02GBDM3H9SQ213HwTrrB0SKCxVpQBaiycwk"
      ]
    }
  ],
  "dependent_workflows": [
    "definition_workflow_02BC75FXY8V6Q7fCnqF2hIiteIL3tPcTIMX",
    "definition_workflow_02GCV5V82EYEX3srHzNxciTdt5yRJE1RVzl"
  ],
  "module_targets": [
    {
      "module_type": "Cisco XDR",
      "external_id": "securex:ao:iroh_api"
    }
  ]
}