{
  "workflow": {
    "unique_name": "definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau",
    "name": "XDR-Automation -- Execute Python Using Large String",
    "title": "XDR-Automation -- Execute Python Using Large String",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "Fail",
          "scope": "output",
          "name": "Python Adapter Non Atomic Test Status",
          "type": "datatype.string",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02DQXGEXBKD3545bkXWGl2ItoEmhhyNsgIa",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "Fail",
          "scope": "output",
          "name": "Python Adapter Atomic Test Status",
          "type": "datatype.string",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02DQXG8YQOP6U6RtdaTbOnKqEjesPGoQigm",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "String_S1",
          "type": "datatype.string",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02DQVZGUKGTXN7GSVtL7JIQ1YCmeKcztAju",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.large_string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "LS1",
          "type": "datatype.large_string",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02DQVZN5XQHQ21TcuaFmAC1PY4mio6k6Ugw",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "Fail",
          "scope": "output",
          "name": "Overall Status for Larget String Support on Python Adapter",
          "type": "datatype.string",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02DR23GAFLQOD6kdLExm2DwNSRCVGtAyaGF",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.large_string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "Large_String_Output",
          "type": "datatype.large_string",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02DQES275JB1M03rB2b8twDoewrcoSixHGs",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.large_string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "LS2",
          "type": "datatype.large_string",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02DQIPQ2OUN6336uUoxDiDvFhPKWvejSJsv",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "local",
          "name": "Provide the Tenant Token without bearer ",
          "type": "datatype.string",
          "is_required": false,
          "display_on_wizard": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_02DQFY3BHH5ET3I46LxnEBkoDFLBXyqZmBx",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "is_atomic": false
      },
      "delete_workflow_instance": false,
      "display_name": "XDR-Automation -- Execute Python Using Large String",
      "runtime_user": {
        "target_default": true
      },
      "target": {
        "no_target": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_02DQVPT5I57TU43WPWfHQo13fWHSdibZNhc",
        "name": "SXO- Create Token-Generate Token",
        "title": "SXO- Create Token-Generate Token",
        "type": "workflow.sub_workflow",
        "base_type": "subworkflow",
        "properties": {
          "continue_on_failure": false,
          "display_name": "SXO- Create Token-Generate Token",
          "input": {
            "variable_workflow_02BC75FY6KJQ31bp06fvoXJ188gYh1wbUa7": "client-febe67d1-b2a4-4d54-a423-f14002c881a0",
            "variable_workflow_02BC8GA3DL7UT2XvjCn2jMUeOtCfsmMDZy4": "rE2IK72XW0h3Hcgc3gdsbTuTgWp755Xm-1cr3Nl6V1OP3aFRtEDNDA"
          },
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "execute_on_this_target": true,
            "target_id": "$module_target;Cisco XDR;securex:ao:iroh_api$",
            "target_type": "web-service.endpoint"
          },
          "workflow_id": "definition_workflow_02BC75FXY8V6Q7fCnqF2hIiteIL3tPcTIMX",
          "workflow_name": "SXO- Create Token-Generate Token"
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02DQVTT6SFT003UscnjQm3Z91ONdgvcdae5",
        "name": "Set Variables",
        "title": "Store Token",
        "type": "core.set_multiple_variables",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Store Token",
          "skip_execution": false,
          "variables_to_update": [
            {
              "variable_to_update": "$workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.local.variable_workflow_02DQFY3BHH5ET3I46LxnEBkoDFLBXyqZmBx$",
              "variable_value_new": "$activity.definition_activity_02DQVPT5I57TU43WPWfHQo13fWHSdibZNhc.output.variable_workflow_02BC75FY6K85Y7UxbMgUx2RiWsymGSVCmQm$"
            }
          ]
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02DQW4SAOT54R4nfYM7ZJtLDrwakMI92DF3",
        "name": "Parallel Block",
        "title": "LargeString Test on Python Adapters",
        "type": "logic.parallel",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "LargeString Test on Python Adapters",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_02DQW4SAXBP9I3NqLcRowugjzLqf1BnRh9M",
            "name": "Parallel Branch",
            "title": "Fetch Data From NonAtomics GET WF API",
            "type": "logic.parallel_block",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Fetch Data From NonAtomics GET WF API",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02DQEQXGAXM8F2GOPiTCGNoo5KWBtpqxDgD",
                "name": "Execute Python Script",
                "title": "Execute Python Script-WF (Non Atomics)",
                "type": "python3.script",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": true,
                  "display_name": "Execute Python Script-WF (Non Atomics)",
                  "script": "import requests\nimport json\n\nurl = \"https://automate.int.iroh.site/api/v1.1/workflows?is_atomic=false\u0026start=0\u0026limit=8000\u0026sort_by=updated_on\"\n\npayload = json.dumps({\n  \"categories\": [],\n  \"owner\": []\n})\nheaders = {\n  'authority': 'automate.int.iroh.site',\n  'accept': 'application/json, text/plain, */*',\n  'accept-language': 'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7',\n  'authorization': 'Bearer $workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.local.variable_workflow_02DQFY3BHH5ET3I46LxnEBkoDFLBXyqZmBx$',\n  'cache-control': 'no-cache',\n  'content-type': 'application/json',\n  'origin': 'https://xdr.int.iroh.site',\n  'pragma': 'no-cache',\n  'sec-ch-ua': '\"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"',\n  'sec-ch-ua-mobile': '?0',\n  'sec-ch-ua-platform': '\"macOS\"',\n  'sec-fetch-dest': 'empty',\n  'sec-fetch-mode': 'cors',\n  'sec-fetch-site': 'same-site',\n  'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36',\n  'x-csco-trxid': '75c2f07d'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\n\nprint(response.text)",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02DQES5AUY2RR1yrinYiggZD0Tl4cVQhXHj",
                "name": "Set Variables",
                "title": "Store Non Atomics Response in LS1",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": true,
                  "display_name": "Store Non Atomics Response in LS1",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.local.variable_workflow_02DQVZN5XQHQ21TcuaFmAC1PY4mio6k6Ugw$",
                      "variable_value_new": "$activity.definition_activity_02DQEQXGAXM8F2GOPiTCGNoo5KWBtpqxDgD.output.response_body$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02DQFSOQQEDU82X3RFrG3ZIsIlrMHqJF3VS",
                "name": "Replace String",
                "title": "Replace String",
                "type": "core.replacestring",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": true,
                  "display_name": "Replace String",
                  "input_string": "$workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.local.variable_workflow_02DQVZN5XQHQ21TcuaFmAC1PY4mio6k6Ugw$",
                  "replace_list": [
                    {
                      "replaced_string": "false",
                      "replacement_string": "False"
                    },
                    {
                      "replaced_string": "true",
                      "replacement_string": "True"
                    },
                    {
                      "replaced_string": "null",
                      "replacement_string": "None"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02DQY4PN4OJNT6qN1Qez0lYmAHvzOF9R1PE",
                "name": "Set Variables",
                "title": "Store Non Atomics Response in LS1 from Replace String",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": true,
                  "display_name": "Store Non Atomics Response in LS1 from Replace String",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.local.variable_workflow_02DQVZN5XQHQ21TcuaFmAC1PY4mio6k6Ugw$",
                      "variable_value_new": "$activity.definition_activity_02DQFSOQQEDU82X3RFrG3ZIsIlrMHqJF3VS.output.result_string$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02DQW9WAWXLBE7TPWKpNCWL8S2TEeCsXmKh",
                "name": "Set Variables",
                "title": "Store Non Atomics Response in string (Expected to Fail)",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": true,
                  "display_name": "Store Non Atomics Response in string (Expected to Fail)",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.local.variable_workflow_02DQVZGUKGTXN7GSVtL7JIQ1YCmeKcztAju$",
                      "variable_value_new": "$activity.definition_activity_02DQEQXGAXM8F2GOPiTCGNoo5KWBtpqxDgD.output.response_body$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02DQF7QDB0EIX1B6CCUnKtR8YFliCvDjraL",
                "name": "Execute Python Script",
                "title": "Print Response Body Using LS1",
                "type": "python3.script",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": true,
                  "display_name": "Print Response Body Using LS1",
                  "script": "print($workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.local.variable_workflow_02DQVZN5XQHQ21TcuaFmAC1PY4mio6k6Ugw$)",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02E0EXZXR2Z2O74I2UMh6l6Zq8JjNTymAPH",
                "name": "Execute Python Script",
                "title": "Convert Json to XML Using LS1",
                "type": "python3.script",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": true,
                  "display_name": "Convert Json to XML Using LS1",
                  "script": "import json\nimport xml.etree.ElementTree as ET\n\ndef json_to_xml(json_data):\n    root = ET.Element(\"root\")\n    json_to_xml_recursive(json_data, root)\n    return ET.tostring(root, encoding=\"unicode\")\n\ndef json_to_xml_recursive(json_data, parent):\n    if isinstance(json_data, dict):\n        for key, value in json_data.items():\n            element = ET.Element(key)\n            parent.append(element)\n            json_to_xml_recursive(value, element)\n    elif isinstance(json_data, list):\n        for item in json_data:\n            element = ET.Element(\"item\")\n            parent.append(element)\n            json_to_xml_recursive(item, element)\n    else:\n        parent.text = str(json_data)\n\n# Example JSON data\njson_data = $workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.local.variable_workflow_02DQVZN5XQHQ21TcuaFmAC1PY4mio6k6Ugw$\n\n# Convert JSON to XML\nxml_data = json_to_xml(json_data)\nprint(xml_data)",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02E0EYCI3239I4I4hZCKtUacdtES5pCz3qG",
                "name": "Execute Python Script",
                "title": "Fetch name and ID from Json Uising LS1",
                "type": "python3.script",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": true,
                  "display_name": "Fetch name and ID from Json Uising LS1",
                  "script": "import json\n\n# Your JSON data\njson_data = $workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.local.variable_workflow_02DQVZN5XQHQ21TcuaFmAC1PY4mio6k6Ugw$\n\n# Iterate over the list of results and extract name and id\nfor item in json_data['results']:\n    name = item['name']\n    _id = item['id']\n    print(\"Name:\", name)\n    print(\"ID:\", _id)\n    print()",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02E0F8COM49ID2TcxJ1v9ijErQa7t9qK8xx",
                "name": "Set Variables",
                "title": "Store XML in LS1 (Expected to Fail)",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": true,
                  "display_name": "Store XML in LS1 (Expected to Fail)",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.local.variable_workflow_02DQVZN5XQHQ21TcuaFmAC1PY4mio6k6Ugw$",
                      "variable_value_new": "$activity.definition_activity_02E0EXZXR2Z2O74I2UMh6l6Zq8JjNTymAPH.output.response_body$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02DQWAL8LOYCJ0qJg70vf0c6aQutlkiwBNy",
                "name": "Condition Block",
                "title": "Verify Python Adapter Test Status (Non-Atomic)",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Verify Python Adapter Test Status (Non-Atomic)",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_02DQWAL8VFPVO5xBtzQn1vXWeE4c8qlKWXy",
                    "name": "Condition Branch",
                    "title": "PassCase or Skip if any condition didn't Matched",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": {
                          "left_operand": {
                            "left_operand": {
                              "left_operand": {
                                "left_operand": {
                                  "left_operand": {
                                    "left_operand": {
                                      "left_operand": {
                                        "left_operand": {
                                          "left_operand": "$activity.definition_activity_02DQVPT5I57TU43WPWfHQo13fWHSdibZNhc.output.variable_workflow_02DJBM55OAE734oLfvIKzE4MxFyiXIrVcYR$",
                                          "operator": "eq",
                                          "right_operand": "Pass"
                                        },
                                        "operator": "and",
                                        "right_operand": {
                                          "left_operand": "$activity.definition_activity_02DQEQXGAXM8F2GOPiTCGNoo5KWBtpqxDgD.output.error.code$",
                                          "operator": "eq",
                                          "right_operand": "200"
                                        }
                                      },
                                      "operator": "and",
                                      "right_operand": {
                                        "left_operand": "$activity.definition_activity_02DQFSOQQEDU82X3RFrG3ZIsIlrMHqJF3VS.output.error.code$",
                                        "operator": "eq",
                                        "right_operand": "200"
                                      }
                                    },
                                    "operator": "and",
                                    "right_operand": {
                                      "left_operand": "$activity.definition_activity_02DQES5AUY2RR1yrinYiggZD0Tl4cVQhXHj.output.error.code$",
                                      "operator": "eq",
                                      "right_operand": "200"
                                    }
                                  },
                                  "operator": "and",
                                  "right_operand": {
                                    "left_operand": "$activity.definition_activity_02DQW9WAWXLBE7TPWKpNCWL8S2TEeCsXmKh.output.error.code$",
                                    "operator": "eq",
                                    "right_operand": "StatusRequestEntityTooLarge"
                                  }
                                },
                                "operator": "and",
                                "right_operand": {
                                  "left_operand": "$activity.definition_activity_02DQF7QDB0EIX1B6CCUnKtR8YFliCvDjraL.output.error.code$",
                                  "operator": "eq",
                                  "right_operand": "200"
                                }
                              },
                              "operator": "and",
                              "right_operand": {
                                "left_operand": "$activity.definition_activity_02DQY4PN4OJNT6qN1Qez0lYmAHvzOF9R1PE.output.error.code$",
                                "operator": "eq",
                                "right_operand": "200"
                              }
                            },
                            "operator": "and",
                            "right_operand": {
                              "left_operand": "$activity.definition_activity_02E0EXZXR2Z2O74I2UMh6l6Zq8JjNTymAPH.output.error.code$",
                              "operator": "eq",
                              "right_operand": "200"
                            }
                          },
                          "operator": "and",
                          "right_operand": {
                            "left_operand": "$activity.definition_activity_02E0EYCI3239I4I4hZCKtUacdtES5pCz3qG.output.error.code$",
                            "operator": "eq",
                            "right_operand": "200"
                          }
                        },
                        "operator": "and",
                        "right_operand": {
                          "left_operand": "$activity.definition_activity_02E0F8COM49ID2TcxJ1v9ijErQa7t9qK8xx.output.error.code$",
                          "operator": "ne",
                          "right_operand": "200"
                        }
                      },
                      "continue_on_failure": true,
                      "display_name": "PassCase or Skip if any condition didn't Matched",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_02DQXGI4NXS4C007z2B4utDRLNKZbIaOQah",
                        "name": "Set Variables",
                        "title": "Pass",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Pass",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.output.variable_workflow_02DQXGEXBKD3545bkXWGl2ItoEmhhyNsgIa$",
                              "variable_value_new": "Pass"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "unique_name": "definition_activity_02DQW4SB6PZ3N5ikCB8i41Wuu7Bl98vb9w5",
            "name": "Parallel Branch",
            "title": "Fetch Data From Atomics GET WF API",
            "type": "logic.parallel_block",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Fetch Data From Atomics GET WF API",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02DQVY9XI3BFK0McUGxvauW36g0eXbIwPV1",
                "name": "Execute Python Script",
                "title": "Execute Python Script-WF (Atomics)",
                "type": "python3.script",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": true,
                  "display_name": "Execute Python Script-WF (Atomics)",
                  "script": "import requests\nimport json\n\nurl = \"https://automate.int.iroh.site/api/v1.1/workflows?is_atomic=true\u0026start=0\u0026limit=100000\u0026sort_by=updated_on\"\n\npayload = json.dumps({\n  \"categories\": [],\n  \"owner\": []\n})\nheaders = {\n  'authority': 'automate.int.iroh.site',\n  'accept': 'application/json, text/plain, */*',\n  'accept-language': 'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7',\n  'authorization': 'Bearer $workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.local.variable_workflow_02DQFY3BHH5ET3I46LxnEBkoDFLBXyqZmBx$',\n  'cache-control': 'no-cache',\n  'content-type': 'application/json',\n  'origin': 'https://xdr.int.iroh.site',\n  'pragma': 'no-cache',\n  'sec-ch-ua': '\"Google Chrome\";v=\"113\", \"Chromium\";v=\"113\", \"Not-A.Brand\";v=\"24\"',\n  'sec-ch-ua-mobile': '?0',\n  'sec-ch-ua-platform': '\"macOS\"',\n  'sec-fetch-dest': 'empty',\n  'sec-fetch-mode': 'cors',\n  'sec-fetch-site': 'same-site',\n  'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36',\n  'x-csco-trxid': '75c2f07d'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\n\nprint(response.text)",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02DQFT9LNEAAF2oe8AWSf067l2phElwBuCC",
                "name": "Set Variables",
                "title": "Store Atomics Response in LS2",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": true,
                  "display_name": "Store Atomics Response in LS2",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.local.variable_workflow_02DQIPQ2OUN6336uUoxDiDvFhPKWvejSJsv$",
                      "variable_value_new": "$activity.definition_activity_02DQVY9XI3BFK0McUGxvauW36g0eXbIwPV1.output.response_body$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02DQW60MG8EZE3L8HbYzYrZbEdPXsTqPlwI",
                "name": "Replace String",
                "title": "Replace String",
                "type": "core.replacestring",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": true,
                  "display_name": "Replace String",
                  "input_string": "$workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.local.variable_workflow_02DQIPQ2OUN6336uUoxDiDvFhPKWvejSJsv$",
                  "replace_list": [
                    {
                      "replaced_string": "false",
                      "replacement_string": "False"
                    },
                    {
                      "replaced_string": "true",
                      "replacement_string": "True"
                    },
                    {
                      "replaced_string": "null",
                      "replacement_string": "None"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02DQY55PK6Z881qWNSmFMyMeSxE5wbrNgGC",
                "name": "Set Variables",
                "title": "Store Atomics Response in LS2 from Replace String",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": true,
                  "display_name": "Store Atomics Response in LS2 from Replace String",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.local.variable_workflow_02DQIPQ2OUN6336uUoxDiDvFhPKWvejSJsv$",
                      "variable_value_new": "$activity.definition_activity_02DQW60MG8EZE3L8HbYzYrZbEdPXsTqPlwI.output.result_string$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02DQWA73UCGN64sTDMJgGolwInfFEn4bpsz",
                "name": "Set Variables",
                "title": "Store Atomics Response in String (Expected to Fail)",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": true,
                  "display_name": "Store Atomics Response in String (Expected to Fail)",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.local.variable_workflow_02DQVZGUKGTXN7GSVtL7JIQ1YCmeKcztAju$",
                      "variable_value_new": "$activity.definition_activity_02DQVY9XI3BFK0McUGxvauW36g0eXbIwPV1.output.response_body$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02DQW6Z7G9TAZ5S7Isrb2189gzW36phOzuZ",
                "name": "Execute Python Script",
                "title": "Print Response Body Using LS2",
                "type": "python3.script",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": true,
                  "display_name": "Print Response Body Using LS2",
                  "script": "print($workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.local.variable_workflow_02DQIPQ2OUN6336uUoxDiDvFhPKWvejSJsv$)",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02E0EYOT5THVN3ti2diMToyiXAa0NLO8hFL",
                "name": "Execute Python Script",
                "title": "Convert Json to XML Using LS2",
                "type": "python3.script",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": true,
                  "display_name": "Convert Json to XML Using LS2",
                  "script": "import json\nimport xml.etree.ElementTree as ET\n\ndef json_to_xml(json_data):\n    root = ET.Element(\"root\")\n    json_to_xml_recursive(json_data, root)\n    return ET.tostring(root, encoding=\"unicode\")\n\ndef json_to_xml_recursive(json_data, parent):\n    if isinstance(json_data, dict):\n        for key, value in json_data.items():\n            element = ET.Element(key)\n            parent.append(element)\n            json_to_xml_recursive(value, element)\n    elif isinstance(json_data, list):\n        for item in json_data:\n            element = ET.Element(\"item\")\n            parent.append(element)\n            json_to_xml_recursive(item, element)\n    else:\n        parent.text = str(json_data)\n\n# Example JSON data\njson_data = $workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.local.variable_workflow_02DQIPQ2OUN6336uUoxDiDvFhPKWvejSJsv$\n\n# Convert JSON to XML\nxml_data = json_to_xml(json_data)\nprint(xml_data)",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02E0EYW8I0V285JKsbvWWYOTxL0dqA2wFOQ",
                "name": "Execute Python Script",
                "title": "Fetch Name and ID from Json Using LS2",
                "type": "python3.script",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": true,
                  "display_name": "Fetch Name and ID from Json Using LS2",
                  "script": "import json\n\n# Your JSON data\njson_data = $workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.local.variable_workflow_02DQIPQ2OUN6336uUoxDiDvFhPKWvejSJsv$\n\n# Iterate over the list of results and extract name and id\nfor item in json_data['results']:\n    name = item['name']\n    _id = item['id']\n    print(\"Name:\", name)\n    print(\"ID:\", _id)\n    print()",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02E0F8X2BDFOA0cLG6TzNzngEjC0QxEaTtK",
                "name": "Set Variables",
                "title": "Store XML in LS2",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": true,
                  "display_name": "Store XML in LS2",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.local.variable_workflow_02DQIPQ2OUN6336uUoxDiDvFhPKWvejSJsv$",
                      "variable_value_new": "$activity.definition_activity_02E0EYOT5THVN3ti2diMToyiXAa0NLO8hFL.output.response_body$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02DQXKTFLF4VN2yOg0fNkbpfMBqcvLrJEJQ",
                "name": "Condition Block",
                "title": "Verify Python Adapter Test Status (Atomic)",
                "type": "logic.if_else",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Verify Python Adapter Test Status (Atomic)",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "blocks": [
                  {
                    "unique_name": "definition_activity_02DQXKTFLGT5N44YlGWJNVjKaIrJltiFNvq",
                    "name": "Condition Branch",
                    "title": "PassCase or Skip if any condition didn't Matched",
                    "type": "logic.condition_block",
                    "base_type": "activity",
                    "properties": {
                      "condition": {
                        "left_operand": {
                          "left_operand": {
                            "left_operand": {
                              "left_operand": {
                                "left_operand": {
                                  "left_operand": {
                                    "left_operand": {
                                      "left_operand": {
                                        "left_operand": {
                                          "left_operand": "$activity.definition_activity_02DQVPT5I57TU43WPWfHQo13fWHSdibZNhc.output.variable_workflow_02DJBM55OAE734oLfvIKzE4MxFyiXIrVcYR$",
                                          "operator": "eq",
                                          "right_operand": "Pass"
                                        },
                                        "operator": "and",
                                        "right_operand": {
                                          "left_operand": "$activity.definition_activity_02DQVY9XI3BFK0McUGxvauW36g0eXbIwPV1.output.error.code$",
                                          "operator": "eq",
                                          "right_operand": "200"
                                        }
                                      },
                                      "operator": "and",
                                      "right_operand": {
                                        "left_operand": "$activity.definition_activity_02DQW60MG8EZE3L8HbYzYrZbEdPXsTqPlwI.output.error.code$",
                                        "operator": "eq",
                                        "right_operand": "200"
                                      }
                                    },
                                    "operator": "and",
                                    "right_operand": {
                                      "left_operand": "$activity.definition_activity_02DQFT9LNEAAF2oe8AWSf067l2phElwBuCC.output.error.code$",
                                      "operator": "eq",
                                      "right_operand": "200"
                                    }
                                  },
                                  "operator": "and",
                                  "right_operand": {
                                    "left_operand": "$activity.definition_activity_02DQWA73UCGN64sTDMJgGolwInfFEn4bpsz.output.error.code$",
                                    "operator": "eq",
                                    "right_operand": "StatusRequestEntityTooLarge"
                                  }
                                },
                                "operator": "and",
                                "right_operand": {
                                  "left_operand": "$activity.definition_activity_02DQW6Z7G9TAZ5S7Isrb2189gzW36phOzuZ.output.error.code$",
                                  "operator": "eq",
                                  "right_operand": "200"
                                }
                              },
                              "operator": "and",
                              "right_operand": {
                                "left_operand": "$activity.definition_activity_02DQY55PK6Z881qWNSmFMyMeSxE5wbrNgGC.output.error.code$",
                                "operator": "eq",
                                "right_operand": "200"
                              }
                            },
                            "operator": "and",
                            "right_operand": {
                              "left_operand": "$activity.definition_activity_02E0EYOT5THVN3ti2diMToyiXAa0NLO8hFL.output.error.code$",
                              "operator": "eq",
                              "right_operand": "200"
                            }
                          },
                          "operator": "and",
                          "right_operand": {
                            "left_operand": "$activity.definition_activity_02E0EYW8I0V285JKsbvWWYOTxL0dqA2wFOQ.output.error.code$",
                            "operator": "eq",
                            "right_operand": "200"
                          }
                        },
                        "operator": "and",
                        "right_operand": {
                          "left_operand": "$activity.definition_activity_02E0F8X2BDFOA0cLG6TzNzngEjC0QxEaTtK.output.error.code$",
                          "operator": "eq",
                          "right_operand": "200"
                        }
                      },
                      "continue_on_failure": true,
                      "display_name": "PassCase or Skip if any condition didn't Matched",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity",
                    "actions": [
                      {
                        "unique_name": "definition_activity_02DQXKTFLIL836NHfA37tIybCjWzmXHKYUp",
                        "name": "Set Variables",
                        "title": "Pass",
                        "type": "core.set_multiple_variables",
                        "base_type": "activity",
                        "properties": {
                          "continue_on_failure": false,
                          "display_name": "Pass",
                          "skip_execution": false,
                          "variables_to_update": [
                            {
                              "variable_to_update": "$workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.output.variable_workflow_02DQXG8YQOP6U6RtdaTbOnKqEjesPGoQigm$",
                              "variable_value_new": "Pass"
                            }
                          ]
                        },
                        "object_type": "definition_activity"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "unique_name": "definition_activity_02DQW8M5GPDF27HpRMnrJsnreLQsU9jFQaJ",
        "name": "Execute Python Script",
        "title": "Print LS1 and LS2 and Resposnse Body of Fetched Data",
        "type": "python3.script",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": true,
          "display_name": "Print LS1 and LS2 and Resposnse Body of Fetched Data",
          "script": "print($workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.local.variable_workflow_02DQVZN5XQHQ21TcuaFmAC1PY4mio6k6Ugw$)\nprint($workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.local.variable_workflow_02DQIPQ2OUN6336uUoxDiDvFhPKWvejSJsv$)\nprint($activity.definition_activity_02E0EYCI3239I4I4hZCKtUacdtES5pCz3qG.output.response_body$)\nprint($activity.definition_activity_02E0EYW8I0V285JKsbvWWYOTxL0dqA2wFOQ.output.response_body$)",
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02DQW88KEHJ2Z4L67EEqubYFppMcxvpNeUC",
        "name": "Set Variables",
        "title": "Store in LS3",
        "type": "core.set_multiple_variables",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": true,
          "display_name": "Store in LS3",
          "skip_execution": false,
          "variables_to_update": [
            {
              "variable_to_update": "$workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.output.variable_workflow_02DQES275JB1M03rB2b8twDoewrcoSixHGs$",
              "variable_value_new": "$activity.definition_activity_02DQW8M5GPDF27HpRMnrJsnreLQsU9jFQaJ.output.response_body$"
            }
          ]
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_02DQXT0BDG5JH4xtquFrfdrFGWbpseDK8Rb",
        "name": "Condition Block",
        "title": "Verify Overall TestStatus",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Verify Overall TestStatus",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_02DQXT0BOVZ7P4C7zROUF7y4Tkezq3dRdfO",
            "name": "Condition Branch",
            "title": "PassCase",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": {
                  "left_operand": {
                    "left_operand": {
                      "left_operand": "$workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.output.variable_workflow_02DQXG8YQOP6U6RtdaTbOnKqEjesPGoQigm$",
                      "operator": "eq",
                      "right_operand": "Pass"
                    },
                    "operator": "and",
                    "right_operand": {
                      "left_operand": "$workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.output.variable_workflow_02DQXGEXBKD3545bkXWGl2ItoEmhhyNsgIa$",
                      "operator": "eq",
                      "right_operand": "Pass"
                    }
                  },
                  "operator": "and",
                  "right_operand": {
                    "left_operand": "$activity.definition_activity_02DQW88KEHJ2Z4L67EEqubYFppMcxvpNeUC.output.error.code$",
                    "operator": "eq",
                    "right_operand": "200"
                  }
                },
                "operator": "and",
                "right_operand": {
                  "left_operand": "$activity.definition_activity_02DQW8M5GPDF27HpRMnrJsnreLQsU9jFQaJ.output.error.code$",
                  "operator": "eq",
                  "right_operand": "200"
                }
              },
              "continue_on_failure": false,
              "display_name": "PassCase",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02DQXV9V09JWK3QQL7SCkX7eni2Hu025qgM",
                "name": "Set Variables",
                "title": "PassCase",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "PassCase",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.output.variable_workflow_02DR23GAFLQOD6kdLExm2DwNSRCVGtAyaGF$",
                      "variable_value_new": "Pass"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_02DQXVQ68JDRK6SFdJylGkz68UyMAVvGeCr",
            "name": "Condition Branch",
            "title": "FailCase",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": {
                  "left_operand": {
                    "left_operand": {
                      "left_operand": "$workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.output.variable_workflow_02DQXG8YQOP6U6RtdaTbOnKqEjesPGoQigm$",
                      "operator": "ne",
                      "right_operand": "Pass"
                    },
                    "operator": "or",
                    "right_operand": {
                      "left_operand": "$workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.output.variable_workflow_02DQXGEXBKD3545bkXWGl2ItoEmhhyNsgIa$",
                      "operator": "ne",
                      "right_operand": "Pass"
                    }
                  },
                  "operator": "or",
                  "right_operand": {
                    "left_operand": "$activity.definition_activity_02DQW88KEHJ2Z4L67EEqubYFppMcxvpNeUC.output.error.code$",
                    "operator": "ne",
                    "right_operand": "200"
                  }
                },
                "operator": "or",
                "right_operand": {
                  "left_operand": "$activity.definition_activity_02DQW8M5GPDF27HpRMnrJsnreLQsU9jFQaJ.output.error.code$",
                  "operator": "ne",
                  "right_operand": "200"
                }
              },
              "continue_on_failure": false,
              "display_name": "FailCase",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_02DQXVQ68KBR652iKyTJX5rDVY5zELgm58d",
                "name": "Set Variables",
                "title": "FailCase",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "FailCase",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_02DQEQTNBIC1A64DY8LDu7YwRKqyEbNZDau.output.variable_workflow_02DR23GAFLQOD6kdLExm2DwNSRCVGtAyaGF$",
                      "variable_value_new": "Fail"
                    }
                  ]
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_02E0HFPJMCVNQ1e7QgKrIDI7tGBFuyZe0eN",
                "name": "Completed",
                "title": "Mark as Failed",
                "type": "logic.completed",
                "base_type": "activity",
                "properties": {
                  "completion_type": "failed-completed",
                  "continue_on_failure": false,
                  "display_name": "Mark as Failed",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      }
    ],
    "categories": [
      "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
    ]
  },
  "subworkflows": [
    {
      "workflow": {
        "unique_name": "definition_workflow_02BC75FXY8V6Q7fCnqF2hIiteIL3tPcTIMX",
        "name": "SXO- Create Token-Generate Token",
        "title": "SXO- Create Token-Generate Token",
        "type": "generic.workflow",
        "base_type": "workflow",
        "variables": [
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "Fail",
              "scope": "output",
              "name": "Token Generation Status",
              "type": "datatype.string",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02DJBM55OAE734oLfvIKzE4MxFyiXIrVcYR",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "output",
              "name": "token",
              "type": "datatype.string",
              "is_required": false,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02BC75FY6K85Y7UxbMgUx2RiWsymGSVCmQm",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "input",
              "name": "client-secret",
              "type": "datatype.string",
              "is_required": true,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02BC8GA3DL7UT2XvjCn2jMUeOtCfsmMDZy4",
            "object_type": "variable_workflow"
          },
          {
            "schema_id": "datatype.string",
            "properties": {
              "value": "",
              "scope": "input",
              "name": "client_id",
              "type": "datatype.string",
              "is_required": true,
              "display_on_wizard": false,
              "is_invisible": false
            },
            "unique_name": "variable_workflow_02BC75FY6KJQ31bp06fvoXJ188gYh1wbUa7",
            "object_type": "variable_workflow"
          }
        ],
        "properties": {
          "atomic": {
            "is_atomic": false
          },
          "delete_workflow_instance": false,
          "description": "This WF Used Generate Token for Tenant Using Client ID and Client Secret",
          "display_name": "SXO- Create Token-Generate Token",
          "runtime_user": {
            "target_default": true
          },
          "target": {
            "target_type": "web-service.endpoint",
            "target_id": "$module_target;Cisco XDR;securex:ao:iroh_api$",
            "execute_on_workflow_target": true
          }
        },
        "object_type": "definition_workflow",
        "actions": [
          {
            "unique_name": "definition_activity_02BC75G22FOUZ4EkPmUFkyaUDv7ufY6XoyD",
            "name": "HTTP Request",
            "title": "Create token",
            "type": "web-service.http_request",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "allow_auto_redirect": true,
              "allow_headers_redirect": false,
              "body": "client_secret=$workflow.definition_workflow_02BC75FXY8V6Q7fCnqF2hIiteIL3tPcTIMX.input.variable_workflow_02BC8GA3DL7UT2XvjCn2jMUeOtCfsmMDZy4$\u0026grant_type=client_credentials\u0026client_id=$workflow.definition_workflow_02BC75FXY8V6Q7fCnqF2hIiteIL3tPcTIMX.input.variable_workflow_02BC75FY6KJQ31bp06fvoXJ188gYh1wbUa7$",
              "continue_on_error_status_code": false,
              "continue_on_failure": true,
              "custom_headers": [
                {
                  "name": "Content-Type",
                  "value": "application/x-www-form-urlencoded"
                }
              ],
              "display_name": "Create token",
              "method": "POST",
              "relative_url": "/oauth2/token",
              "runtime_user": {
                "target_default": true
              },
              "skip_execution": false,
              "target": {
                "use_workflow_target": true
              }
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02BC75G34XD9J77fLUiyGdXiTwppF2BuwNV",
            "name": "JSONPath Query",
            "title": "Get Token",
            "type": "corejava.jsonpathquery",
            "base_type": "activity",
            "properties": {
              "action_timeout": 180,
              "continue_on_failure": true,
              "display_name": "Get Token",
              "input_json": "$activity.definition_activity_02BC75G22FOUZ4EkPmUFkyaUDv7ufY6XoyD.output.response_body$",
              "jsonpath_queries": [
                {
                  "jsonpath_query": "$.access_token",
                  "jsonpath_query_name": "token",
                  "jsonpath_query_type": "string",
                  "zdate_type_format": "yyyy-MM-dd'T'HH:mm:ssZ"
                }
              ],
              "skip_execution": false
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02BC75G4HIDLS4gLpshXHmYqx7felpNEF3o",
            "name": "Set Variables",
            "title": "Set token output variable to generated token",
            "type": "core.set_multiple_variables",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": true,
              "display_name": "Set token output variable to generated token",
              "skip_execution": false,
              "variables_to_update": [
                {
                  "variable_to_update": "$workflow.definition_workflow_02BC75FXY8V6Q7fCnqF2hIiteIL3tPcTIMX.output.variable_workflow_02BC75FY6K85Y7UxbMgUx2RiWsymGSVCmQm$",
                  "variable_value_new": "$activity.definition_activity_02BC75G34XD9J77fLUiyGdXiTwppF2BuwNV.output.jsonpath_queries.token$"
                }
              ]
            },
            "object_type": "definition_activity"
          },
          {
            "unique_name": "definition_activity_02DJBMAELR6VK7CssqESkx4t4o9vPm3Zq6Q",
            "name": "Condition Block",
            "title": "Verify Token Generation",
            "type": "logic.if_else",
            "base_type": "activity",
            "properties": {
              "continue_on_failure": false,
              "display_name": "Verify Token Generation",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "blocks": [
              {
                "unique_name": "definition_activity_02DJBMAESCT805PwD1svfBaW7TxxRzXFyzr",
                "name": "Condition Branch",
                "title": "Pass Case",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": {
                      "left_operand": {
                        "left_operand": "$activity.definition_activity_02BC75G22FOUZ4EkPmUFkyaUDv7ufY6XoyD.output.error.code$",
                        "operator": "eq",
                        "right_operand": "200"
                      },
                      "operator": "and",
                      "right_operand": {
                        "left_operand": "$activity.definition_activity_02BC75G34XD9J77fLUiyGdXiTwppF2BuwNV.output.error.code$",
                        "operator": "eq",
                        "right_operand": "200"
                      }
                    },
                    "operator": "and",
                    "right_operand": {
                      "left_operand": "$activity.definition_activity_02BC75G4HIDLS4gLpshXHmYqx7felpNEF3o.output.error.code$",
                      "operator": "eq",
                      "right_operand": "200"
                    }
                  },
                  "continue_on_failure": false,
                  "display_name": "Pass Case",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02DJBNQ2F3PNZ0AKjBx061Nt1mgaPTGY3IK",
                    "name": "Set Variables",
                    "title": "PassCase",
                    "type": "core.set_multiple_variables",
                    "base_type": "activity",
                    "properties": {
                      "continue_on_failure": false,
                      "display_name": "PassCase",
                      "skip_execution": false,
                      "variables_to_update": [
                        {
                          "variable_to_update": "$workflow.definition_workflow_02BC75FXY8V6Q7fCnqF2hIiteIL3tPcTIMX.output.variable_workflow_02DJBM55OAE734oLfvIKzE4MxFyiXIrVcYR$",
                          "variable_value_new": "Pass"
                        }
                      ]
                    },
                    "object_type": "definition_activity"
                  }
                ]
              },
              {
                "unique_name": "definition_activity_02DJBO37G1DKK2Wz94WUSToBiRzqwf6nJp4",
                "name": "Condition Branch",
                "title": "Fail Case",
                "type": "logic.condition_block",
                "base_type": "activity",
                "properties": {
                  "condition": {
                    "left_operand": {
                      "left_operand": {
                        "left_operand": "$activity.definition_activity_02BC75G22FOUZ4EkPmUFkyaUDv7ufY6XoyD.output.error.code$",
                        "operator": "ne",
                        "right_operand": "200"
                      },
                      "operator": "or",
                      "right_operand": {
                        "left_operand": "$activity.definition_activity_02BC75G34XD9J77fLUiyGdXiTwppF2BuwNV.output.error.code$",
                        "operator": "ne",
                        "right_operand": "200"
                      }
                    },
                    "operator": "or",
                    "right_operand": {
                      "left_operand": "$activity.definition_activity_02BC75G4HIDLS4gLpshXHmYqx7felpNEF3o.output.error.code$",
                      "operator": "ne",
                      "right_operand": "200"
                    }
                  },
                  "continue_on_failure": false,
                  "display_name": "Fail Case",
                  "skip_execution": false
                },
                "object_type": "definition_activity",
                "actions": [
                  {
                    "unique_name": "definition_activity_02DJO4X2EUMJR6ZKxfWWb3fyUYJHxSkucwM",
                    "name": "Completed",
                    "title": "Failed",
                    "type": "logic.completed",
                    "base_type": "activity",
                    "properties": {
                      "completion_type": "failed-completed",
                      "continue_on_failure": false,
                      "display_name": "Failed",
                      "skip_execution": false
                    },
                    "object_type": "definition_activity"
                  }
                ]
              }
            ]
          }
        ],
        "categories": [
          "category_1BMfMXSnJMyt5Ihqi7rWJr5N8cf"
        ]
      }
    }
  ],
  "dependent_workflows": [
    "definition_workflow_02BC75FXY8V6Q7fCnqF2hIiteIL3tPcTIMX"
  ],
  "module_targets": [
    {
      "module_type": "Cisco XDR",
      "external_id": "securex:ao:iroh_api"
    }
  ]
}